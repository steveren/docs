.. index:: replica set members; delayed
.. _replica-set-delayed-configuration:
.. _replica-set-delayed-members:
.. _replica-set-delayed-replication:

===========================
Delayed Replica Set Members
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Delayed members contain copies of a :term:`replica set's <replica
set>` data set. However, a delayed member's data set reflects an
earlier, or delayed, state of the set. For example, if the current
time is 09:52 and a member has a delay of an hour, the delayed member
has no operation more recent than 08:52.

Because delayed members are a "rolling backup" or a running
"historical" snapshot of the data set, they may help you recover from
various kinds of human error. For example, a delayed member can make
it possible to recover from unsuccessful application upgrades and
operator errors including dropped databases and collections.

Considerations
--------------

Requirements
~~~~~~~~~~~~

Delayed members:

- **Must be** :ref:`priority 0 <replica-set-secondary-only-members>`
  members. Set the priority to 0 to prevent a delayed member from
  becoming primary.

- **Should be** :ref:`hidden <replica-set-hidden-members>`
  members. Always prevent applications from seeing and querying
  delayed members.

- *do* vote in :term:`elections <election>` for primary, if :rsconf:`members[n].votes` is set to 1.

Behavior
~~~~~~~~

Delayed members copy and apply operations from the source :term:`oplog` on a delay.
When choosing the amount of delay, consider that the amount of delay:

- must be equal to or greater than your expected maintenance window durations.

- must be *smaller* than the capacity of the oplog. For more
  information on oplog size, see :ref:`replica-set-oplog-sizing`.

Sharding
~~~~~~~~

In sharded clusters, delayed members have limited utility when the
:term:`balancer` is enabled. Because delayed members replicate chunk
migrations with a delay, the state of delayed members in a sharded
cluster are not useful for recovering to a previous state of the
sharded cluster if any migrations occur during the delay window.

Illustration
------------

In the following 5-member replica set, the primary and all secondaries
have copies of the data set. One member applies operations with a
delay of 3600 seconds (one hour). This delayed member is also
*hidden* and is a *priority 0 member*.

.. include:: /images/replica-set-delayed-member.rst

Configuration
-------------

To configure a delayed secondary member, set its
:rsconf:`members[n].priority` value to ``0``, its
:rsconf:`members[n].hidden` value to ``true``, and
its :rsconf:`members[n].slaveDelay` value to the
number of seconds to delay.

.. important::

   The length of the secondary
   :rsconf:`members[n].slaveDelay` must
   fit within the window of the oplog. If the oplog is shorter than
   the :rsconf:`members[n].slaveDelay`
   window, the delayed member cannot successfully replicate
   operations.

When you configure a delayed member, the delay
applies both to replication and to the member's :term:`oplog`. For
details on delayed members and their uses, see
:doc:`/core/replica-set-delayed-member`.

.. code-block:: javascript

   {
      "_id" : <num>,
      "host" : <hostname:port>,
      "priority" : 0,
      "slaveDelay" : <seconds>,
      "hidden" : true
   }

Example
-------

The following example sets a 1-hour delay on a secondary member
currently at the index ``0`` in the
:rsconf:`members` array. To set the delay, issue
the following sequence of operations in a :program:`mongo` shell
connected to the primary:

.. code-block:: javascript

   cfg = rs.conf()
   cfg.members[0].priority = 0
   cfg.members[0].hidden = true
   cfg.members[0].slaveDelay = 3600
   rs.reconfig(cfg)

After the replica set reconfigures, the delayed secondary member cannot
become :term:`primary` and is hidden from applications. The
:rsconf:`members[n].slaveDelay` value delays both
replication and the member's :term:`oplog` by 3600 seconds (1 hour).

.. include:: /includes/fact-rs-conf-array-index.rst

.. include:: /includes/warning-rs-reconfig.rst
